/**
 *
 */
package info.san.books.app.model.entry;

import info.san.books.app.rest.dto.visitor.AuteurEntryDTOVisitor;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * @author ANGELLOZ-NICOUD SÃ©bastien
 *
 */
@NamedQueries(value = {
		@NamedQuery(name = "AuteurEntry.countByNomAndPrenom", query = "Select Count(auteur) From AuteurEntry auteur Where auteur.nom = :nom And auteur.prenom = :prenom")
})
@Entity
@Table(name = "AUTEUR", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "nom", "prenom" })
})
public class AuteurEntry implements Entry, Visitable<AuteurEntryDTOVisitor> {

	private static final long serialVersionUID = 9014971070682344334L;

	@Id
	@Column(length = 36, nullable = false, name = "ID")
	private String id;

	@Column(length = 100, nullable = false, name = "NOM")
	private String nom;

	@Column(length = 100, nullable = false, name = "PRENOM")
	private String prenom;

	@ManyToMany(mappedBy = "auteurs")
	private List<LivreEntry> livres;

	@Override
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	public List<LivreEntry> getLivres() {
		return this.livres;
	}

	@Override
	public void accept(AuteurEntryDTOVisitor visitor) {
		visitor.visit(this);
	}

}
