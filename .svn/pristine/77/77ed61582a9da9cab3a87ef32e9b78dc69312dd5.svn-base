package info.san.biblio.app.model.entry;

import info.san.biblio.app.rest.dto.visitor.SerieEntryDTOVisitor;

import java.util.Collection;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@NamedQueries(value = {
		@NamedQuery(name = "SerieEntry.findAll", query = "Select serie From SerieEntry serie"),
		@NamedQuery(name = "SerieEntry.findByName", query = "Select serie From SerieEntry serie Where serie.name = :name"),
		@NamedQuery(name = "SerieEntry.countByName", query = "Select Count(serie) From SerieEntry serie Where serie.name = :name")
})
@Entity
@Table(name = "serie")
public class SerieEntry implements Entry, Visitable<SerieEntryDTOVisitor> {

	private static final long serialVersionUID = 5919287885153258277L;

	@Id
	@Column(length = 36, nullable = false)
	private String id;

	@Basic(optional = false)
	@Column(length = 50, nullable = false, unique = true)
	private String name;

	@OneToMany(cascade = { }, mappedBy = "serie", fetch = FetchType.EAGER, orphanRemoval = true)
	private Collection<SaisonEntry> saisons;

	protected SerieEntry() {
		// Nothing.
	}

	public SerieEntry(String id, String name) {
		this.id = id;
		this.name = name;
	}

	@Override
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Collection<SaisonEntry> getSaisons() {
		return this.saisons;
	}

	@Override
	public void accept(SerieEntryDTOVisitor visitor) {
		visitor.visit(this);

		for (SaisonEntry s : this.getSaisons()) {
			visitor.visit(s);
		}
	}

}
